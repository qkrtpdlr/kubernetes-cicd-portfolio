apiVersion: apps/v1
kind: Deployment
metadata:
  name: fresh-chicken-app
  namespace: production
  labels:
    app: fresh-chicken
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fresh-chicken
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0  # Zero-Downtime 보장
  template:
    metadata:
      labels:
        app: fresh-chicken
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: fresh-chicken-sa
      containers:
      - name: fresh-chicken
        image: <AWS_ACCOUNT_ID>.dkr.ecr.ap-northeast-2.amazonaws.com/fresh-chicken:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        
        # 환경 변수 (ConfigMap)
        envFrom:
        - configMapRef:
            name: fresh-chicken-config
        
        # 환경 변수 (Secret)
        env:
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: fresh-chicken-secret
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fresh-chicken-secret
              key: DB_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fresh-chicken-secret
              key: REDIS_PASSWORD
        
        # Resource Limits
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        
        # Readiness Probe (ALB Health Check)
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        
        # Liveness Probe (Pod 재시작)
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        
        # Startup Probe (초기 기동 시간 보장)
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 10  # 최대 100초 대기
        
        # Graceful Shutdown
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      
      # Pod 종료 대기 시간
      terminationGracePeriodSeconds: 30
